# Make sure the metric prefix ends with a |
#This will create this metric in all the tiers, under this path.
metricPrefix: "Custom Metrics|OracleDB|"
#This will create it in specific Tier. Replace <ComponentID> with TierID
#metricPrefix: "Server|Component:<ComponentID>|Custom Metrics|OracleDB|"


dbServers:
    - displayName: "OracleDB"
      connectionUrl: "jdbc:oracle:thin:@192.168.57.106:1521:orcl12c"
#      connectionUrl: "jdbc:oracle:thin:username/password@HostForDatabase:PortForDatabase:databaseName"
#      connectionUrl: "jdbc:oracle:thin:@HostForDatabase:PortForDatabase:databaseName"

      driver: "oracle.jdbc.OracleDriver"

      connectionProperties:
         - user: "system"
           password: "oracle"

      #Needs to be used in conjunction with `encryptionKey`. Please read the extension documentation to generate encrypted password
#      encryptedPassword: "9XdTa7+McBwP2g2xSpyNsg=="

      #Needs to be used in conjunction with `encryptedPassword`. Please read the extension documentation to generate encrypted password
#      encryptionKey: "myKey"

      # Replaces characters in metric name with the specified characters.
      # "replace" takes any regular expression
      # "replaceWith" takes the string to replace the matched characters

      metricCharacterReplacer:
        - replace: "%"
          replaceWith: ""
        - replace: ","
          replaceWith: "-"


      queries:
        - displayName: "Query1 Sessions "
          queryStmt: "SELECT 'Sessions' , count(*) NumberOfSessions from v$session "
          columns:
            - name: "'Sessions'"
              type: "metricPathName"

            - name: "NumberOfSessions"
              type: "metricValue"

        - displayName: "Query2 Percent of Max Sessions"
          queryStmt: "SELECT 'Percent of max sessions' as sessionNumber, a.cnt / b.cpus * 100 AS Value FROM ( SELECT COUNT(*) cnt FROM v$session ) a, ( SELECT value AS cpus FROM v$parameter WHERE name='sessions') b"
          columns:
            - name: "sessionNumber"
              type: "metricPathName"

            - name: "Value"
              type: "metricValue"

        - displayName: "Query3 Percent of Max Open Cursors"
          queryStmt: "SELECT 'Percent of Max open cursors' as cursors, a.crs / b.max_crs * 100 as Value FROM ( SELECT MAX(a.value) AS crs from v$sesstat a, v$statname b where a.statistic# = b.statistic# AND b.name = 'opened cursors current' ) a, ( select value AS max_crs FROM v$parameter WHERE name='open_cursors' ) b"
          columns:
            - name: "cursors"
              type: "metricPathName"

            - name: "Value"
              type: "metricValue"

        - displayName: "Query4 Active User Sessions"
          queryStmt: "SELECT 'Active User Sessions' as ActiveUserSessions, COUNT(*) Count FROM v$session WHERE status='ACTIVE' AND username IS NOT NULL"
          columns:
            - name: "ActiveUserSessions"
              type: "metricPathName"

            - name: "Count"
              type: "metricValue"

        - displayName: "Query5 Avg Active Sessions Per Logical CPU"
          queryStmt: "SELECT 'Average Active Sessions per logical CPU' as AvgActive, a.value / b.cpus AS Value FROM (SELECT value FROM v$sysmetric WHERE group_id = 2 AND metric_name = 'Average Active Sessions') a, (SELECT value AS cpus FROM v$parameter WHERE name='cpu_count') b"
          columns:
            - name: "AvgActive"
              type: "metricPathName"

            - name: "Value"
              type: "metricValue"

        - displayName: "Query6 System Metrics"
          queryStmt: "SELECT metric_name, Value FROM v$sysmetric WHERE group_id = 2 AND metric_name IN ('Average Active Sessions', 'Current OS Load', 'Database CPU Time Ratio', 'Database Wait Time Ratio', 'DB Block Changes Per Sec', 'DB Block Changes Per Txn', 'DB Block Gets Per Sec', 'DB Block Gets Per Txn', 'Executions Per Sec', 'Executions Per Txn', 'I/O Megabytes per Second', 'Logical Reads Per Sec', 'Physical Reads Per Sec', 'Memory Sorts Ratio', 'Physical Read Total Bytes Per Sec', 'Physical Write Total Bytes Per Sec', 'Shared Pool Free %', 'Execute Without Parse Ratio', 'Soft Parse Ratio', 'Temp Space Used', 'Total PGA Allocated', 'Response Time Per Txn', 'SQL Service Response Time') ORDER BY metric_name"
          columns:
            - name: "metric_name"
              type: "metricPathName"

            - name: "Value"
              type: "metricValue"

        - displayName: "Query7 Wait Class BreakDown Metrics"
          queryStmt: "SELECT 'Wait Class Breakdown|'||wait_class as waitingMetric, ROUND(aas, 2) as Value FROM(SELECT n.wait_class, m.time_waited/m.INTSIZE_CSEC AAS FROM v$waitclassmetric m, v$system_wait_class n WHERE m.wait_class_id=n.wait_class_id AND n.wait_class != 'Idle' UNION ALL SELECT 'CPU', value/100 AAS FROM v$sysmetric WHERE metric_name = 'CPU Usage Per Sec' AND group_id = 2)"
          columns:
            - name: "waitingMetric"
              type: "metricPathName"

            - name: "Value"
              type: "metricValue"

        - displayName: "Query8 Table Space Percent Free"
          queryStmt: "select df.tablespace_name as tableName, round(100 * ( (df.totalspace - tu.totalusedspace)/ df.totalspace)) Value from (select tablespace_name, round(sum(bytes) / 1048576) totalSpace from dba_data_files group by tablespace_name) df, (select round(sum(bytes)/(1024*1024)) totalusedspace, tablespace_name from dba_segments group by tablespace_name) tu where df.tablespace_name = tu.tablespace_name"
          columns:
            - name: "tableName"
              type: "metricPathName"

            - name: "Value"
              type: "metricValue"


numberOfThreads: 5

#Run it as a scheduled task instead of running every minute.
#If you want to run this every minute, comment this out
# taskSchedule:
#   numberOfThreads: 1
#   taskDelaySeconds: 10
